import 'package:flutter/material.dart';
import 'package:yolo/model/dataModel.dart';
import 'package:yolo/screens/displayroom.dart';
import 'package:http/http.dart' as http;

class HomeScreen extends StatefulWidget {
  const HomeScreen({super.key});

  @override
  State<HomeScreen> createState() => __HomeScreenState();
}

class __HomeScreenState extends State<HomeScreen> {
  List<Room> rooms = [];
  bool visible = false;
  @override
  void initState() {
    super.initState();
    fetchData();
  }

  Future<List<Room>> fetchData() async {
    try {
      final response = await http.get(Uri.parse('http://10.0.2.2:3000/rooms'));
      if (response.statusCode == 200) {
        final rooms = parseRoomsFromJson(response.body);
        return rooms ?? []; // Return an empty list if rooms is null
      } else {
        throw Exception('Failed to load rooms: ${response.statusCode}');
      }
    } catch (error) {
      print('Error fetching data: $error');
      rethrow; // Rethrow the error or handle it differently
    }
  }

  void DisplayScreen(Room room, BuildContext context) {
    Navigator.push(context,
        MaterialPageRoute(builder: (context) => DisplayRoom(room: room)));
  }

  List<String> test = [
    'Dates',
    'Gustes',
    'Type Of Place',
    'Price',
    'Quality',
    'bello',
    'bello',
    'bello',
    'bello',
    'bello',
    'bello',
    'bello',
  ];
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Container(
          margin: const EdgeInsets.only(top: 20),
          child: Row(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              const Text('Yolo'),
              IconButton(onPressed: () {}, icon: const Icon(Icons.location_on))
            ],
          ),
        ),
      ),
      body: ListView(
        children: [
          Container(
            margin: const EdgeInsets.all(18),
            child: SearchBar(
              leading:
                  IconButton(onPressed: () {}, icon: const Icon(Icons.search)),
              hintText: 'Search By Location..',
            ),
          ),
          Container(
            margin: const EdgeInsets.symmetric(horizontal: 28),
            height: 50,
            child: ListView.separated(
                separatorBuilder: (context, index) => const SizedBox(
                      width: 10,
                    ),
                scrollDirection: Axis.horizontal,
                itemCount: test.length,
                itemBuilder: (context, index) {
                  return Card(
                    elevation: 3.0,
                    child: Padding(
                      padding: const EdgeInsets.all(10.0),
                      child: Center(child: Text(test[index])),
                    ),
                  );
                }),
          ),
          const SizedBox(
            height: 50,
          ),
          FutureBuilder<List<Room>>(
            future: fetchData(),
            builder: (context, snapshot) {
              try {
                switch (snapshot.connectionState) {
                  case ConnectionState.none:
                    return const Text('Waiting ...');
                  case ConnectionState.waiting:
                    return const Center(
                      child: CircularProgressIndicator(),
                    );
                  case ConnectionState.done:
                    if (snapshot.hasError) {
                      return Text('error : ${snapshot.error}');
                    }
                    if (snapshot.hasData) {
                      return RoomCard(
                        onTap: DisplayScreen,
                        room: snapshot.data?[0],
                      );
                    }

                  default:
                    return Text('Something went wrong.');
                }
              } catch (error) {
                print('Error fetching data: $error');
                // Rethrow the error or handle it differently
              }
              throw Exception('Failed to load rooms: ');
            },
          ),
          const SizedBox(
            height: 50,
          ),
        ],
      ),
    );
  }
}

const kfontSizeDiscount = TextStyle(fontSize: 10);

class RoomCard extends StatelessWidget {
  const RoomCard({super.key, required this.room, required this.onTap});
  final Room? room;
  final void Function(Room room, BuildContext context) onTap;

  @override
  Widget build(BuildContext context) {
    return GestureDetector(
      onTap: () {
        if (room != null) {
          onTap(room!, context);
        }
      },
      child: Container(
        decoration: BoxDecoration(
            borderRadius: BorderRadius.circular(10),
            color: const Color.fromARGB(255, 242, 240, 245)),
        margin: const EdgeInsets.symmetric(horizontal: 20),
        height: 270,
        width: double.infinity,
        child: Row(
          children: [
            Expanded(
              flex: 3,
              child: ClipRRect(
                borderRadius: const BorderRadius.only(
                    topLeft: Radius.circular(10),
                    bottomLeft: Radius.circular(10)),
                child: Image.network(
                  room?.image![0] ?? '',
                  height: 270,
                  fit: BoxFit.cover,
                ),
              ),
            ),
            const SizedBox(
              width: 10,
            ),
            Expanded(
              flex: 2,
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                children: [
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Text(
                        room!.roomType.name.toUpperCase(),
                        style: const TextStyle(
                            fontSize: 18, fontWeight: FontWeight.w500),
                        textAlign: TextAlign.center,
                      ),
                      Text(
                        room!.location[0],
                        textAlign: TextAlign.center,
                      ),
                      Text(room!.location[1]),
                    ],
                  ),
                  Container(
                    margin: const EdgeInsets.only(right: 10),
                    child: const Divider(
                      thickness: 0.9,
                      color: Color.fromARGB(255, 24, 23, 23),
                    ),
                  ),
                  Card(
                    child: Padding(
                      padding: const EdgeInsets.all(10.0),
                      child: Text(room!.sex.name.toUpperCase()),
                    ),
                  ),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      const Text('Monthly Rent '),
                      Row(
                        children: [
                          Text(
                            room!.rent.toString(),
                            style: const TextStyle(
                                fontSize: 18, fontWeight: FontWeight.w600),
                          ),
                          const Text(' Onwards'),
                        ],
                      )
                    ],
                  ),
                  Container(
                    margin: const EdgeInsets.only(right: 10),
                    decoration: BoxDecoration(
                        color: const Color.fromARGB(255, 138, 227, 141),
                        borderRadius: BorderRadius.circular(5)),
                    child: const Row(
                      children: [
                        SizedBox(
                          width: 8,
                        ),
                        Icon(
                          Icons.discount,
                          size: 15,
                        ),
                        SizedBox(
                          width: 8,
                        ),
                        Text(
                          'Upto',
                          style: kfontSizeDiscount,
                        ),
                        SizedBox(
                          width: 4,
                        ),
                        Text(
                          '20%',
                          style: TextStyle(
                              fontWeight: FontWeight.w600, fontSize: 12),
                        ),
                        SizedBox(
                          width: 4,
                        ),
                        Text(
                          'Off',
                          style: TextStyle(fontSize: 10),
                        )
                      ],
                    ),
                  )
                ],
              ),
            )
          ],
        ),
      ),
    );
  }
}




// Visibility(
//             visible: visible,
//             child: RoomCard(
//               room: rooms[0],
//               onTap: DisplayScreen,
//             ),
//             replacement: const Center(
//               child: CircularProgressIndicator(),
//             ),
//           ),



//  RoomCard(
//                         onTap: DisplayScreen,
//                         room: snapshot.data?[0],
//                       );